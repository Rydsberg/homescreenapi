/* tslint:disable */
/* eslint-disable */
/**
 * Planera Resa
 * Sök och planera resor med Västtrafik
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { VTApiPlaneraResaCoreModelsNote } from './VTApiPlaneraResaCoreModelsNote';
import {
    VTApiPlaneraResaCoreModelsNoteFromJSON,
    VTApiPlaneraResaCoreModelsNoteFromJSONTyped,
    VTApiPlaneraResaCoreModelsNoteToJSON,
} from './VTApiPlaneraResaCoreModelsNote';
import type { VTApiPlaneraResaCoreModelsTransportMode } from './VTApiPlaneraResaCoreModelsTransportMode';
import {
    VTApiPlaneraResaCoreModelsTransportModeFromJSON,
    VTApiPlaneraResaCoreModelsTransportModeFromJSONTyped,
    VTApiPlaneraResaCoreModelsTransportModeToJSON,
} from './VTApiPlaneraResaCoreModelsTransportMode';
import type { VTApiPlaneraResaCoreModelsTransportSubMode } from './VTApiPlaneraResaCoreModelsTransportSubMode';
import {
    VTApiPlaneraResaCoreModelsTransportSubModeFromJSON,
    VTApiPlaneraResaCoreModelsTransportSubModeFromJSONTyped,
    VTApiPlaneraResaCoreModelsTransportSubModeToJSON,
} from './VTApiPlaneraResaCoreModelsTransportSubMode';
import type { VTApiPlaneraResaWebV4ModelsCoordinateApiModel } from './VTApiPlaneraResaWebV4ModelsCoordinateApiModel';
import {
    VTApiPlaneraResaWebV4ModelsCoordinateApiModelFromJSON,
    VTApiPlaneraResaWebV4ModelsCoordinateApiModelFromJSONTyped,
    VTApiPlaneraResaWebV4ModelsCoordinateApiModelToJSON,
} from './VTApiPlaneraResaWebV4ModelsCoordinateApiModel';
import type { VTApiPlaneraResaWebV4ModelsJourneyDetailsCallApiModel } from './VTApiPlaneraResaWebV4ModelsJourneyDetailsCallApiModel';
import {
    VTApiPlaneraResaWebV4ModelsJourneyDetailsCallApiModelFromJSON,
    VTApiPlaneraResaWebV4ModelsJourneyDetailsCallApiModelFromJSONTyped,
    VTApiPlaneraResaWebV4ModelsJourneyDetailsCallApiModelToJSON,
} from './VTApiPlaneraResaWebV4ModelsJourneyDetailsCallApiModel';
import type { VTApiPlaneraResaWebV4ModelsJourneyDetailsLinkSegmentApiModel } from './VTApiPlaneraResaWebV4ModelsJourneyDetailsLinkSegmentApiModel';
import {
    VTApiPlaneraResaWebV4ModelsJourneyDetailsLinkSegmentApiModelFromJSON,
    VTApiPlaneraResaWebV4ModelsJourneyDetailsLinkSegmentApiModelFromJSONTyped,
    VTApiPlaneraResaWebV4ModelsJourneyDetailsLinkSegmentApiModelToJSON,
} from './VTApiPlaneraResaWebV4ModelsJourneyDetailsLinkSegmentApiModel';

/**
 * Information about a walk, bike or car link between two public transport trip legs.
 * @export
 * @interface VTApiPlaneraResaWebV4ModelsJourneyDetailsConnectionLinkApiModel
 */
export interface VTApiPlaneraResaWebV4ModelsJourneyDetailsConnectionLinkApiModel {
    /**
     * 
     * @type {VTApiPlaneraResaCoreModelsTransportMode}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneyDetailsConnectionLinkApiModel
     */
    transportMode?: VTApiPlaneraResaCoreModelsTransportMode;
    /**
     * 
     * @type {VTApiPlaneraResaCoreModelsTransportSubMode}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneyDetailsConnectionLinkApiModel
     */
    transportSubMode?: VTApiPlaneraResaCoreModelsTransportSubMode;
    /**
     * 
     * @type {VTApiPlaneraResaWebV4ModelsJourneyDetailsCallApiModel}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneyDetailsConnectionLinkApiModel
     */
    origin?: VTApiPlaneraResaWebV4ModelsJourneyDetailsCallApiModel;
    /**
     * 
     * @type {VTApiPlaneraResaWebV4ModelsJourneyDetailsCallApiModel}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneyDetailsConnectionLinkApiModel
     */
    destination?: VTApiPlaneraResaWebV4ModelsJourneyDetailsCallApiModel;
    /**
     * An ordered list (most important first) of notes related to the access link.
     * @type {Array<VTApiPlaneraResaCoreModelsNote>}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneyDetailsConnectionLinkApiModel
     */
    notes?: Array<VTApiPlaneraResaCoreModelsNote> | null;
    /**
     * Distance in meters.
     * @type {number}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneyDetailsConnectionLinkApiModel
     */
    distanceInMeters?: number | null;
    /**
     * The planned departure time in RFC 3339 format.
     * @type {string}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneyDetailsConnectionLinkApiModel
     */
    plannedDepartureTime?: string | null;
    /**
     * The planned arrival time in RFC 3339 format.
     * @type {string}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneyDetailsConnectionLinkApiModel
     */
    plannedArrivalTime?: string | null;
    /**
     * The planned duration in minutes.
     * @type {number}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneyDetailsConnectionLinkApiModel
     */
    plannedDurationInMinutes?: number | null;
    /**
     * The estimated departure time in RFC 3339 format, if available.
     * @type {string}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneyDetailsConnectionLinkApiModel
     */
    estimatedDepartureTime?: string | null;
    /**
     * The estimated arrival time in RFC 3339 format, if available.
     * @type {string}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneyDetailsConnectionLinkApiModel
     */
    estimatedArrivalTime?: string | null;
    /**
     * The estimated duration in minutes, if available.
     * @type {number}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneyDetailsConnectionLinkApiModel
     */
    estimatedDurationInMinutes?: number | null;
    /**
     * Number of steps based on the distance and an estimated step length of 0.65 meters.
     * @type {number}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneyDetailsConnectionLinkApiModel
     */
    estimatedNumberOfSteps?: number | null;
    /**
     * The coordinates for the link.
     * @type {Array<VTApiPlaneraResaWebV4ModelsCoordinateApiModel>}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneyDetailsConnectionLinkApiModel
     */
    linkCoordinates?: Array<VTApiPlaneraResaWebV4ModelsCoordinateApiModel> | null;
    /**
     * The segments that make up this link.
     * @type {Array<VTApiPlaneraResaWebV4ModelsJourneyDetailsLinkSegmentApiModel>}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneyDetailsConnectionLinkApiModel
     */
    segments?: Array<VTApiPlaneraResaWebV4ModelsJourneyDetailsLinkSegmentApiModel> | null;
    /**
     * Index of Leg in Journey
     * @type {number}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneyDetailsConnectionLinkApiModel
     */
    journeyLegIndex?: number;
}

/**
 * Check if a given object implements the VTApiPlaneraResaWebV4ModelsJourneyDetailsConnectionLinkApiModel interface.
 */
export function instanceOfVTApiPlaneraResaWebV4ModelsJourneyDetailsConnectionLinkApiModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function VTApiPlaneraResaWebV4ModelsJourneyDetailsConnectionLinkApiModelFromJSON(json: any): VTApiPlaneraResaWebV4ModelsJourneyDetailsConnectionLinkApiModel {
    return VTApiPlaneraResaWebV4ModelsJourneyDetailsConnectionLinkApiModelFromJSONTyped(json, false);
}

export function VTApiPlaneraResaWebV4ModelsJourneyDetailsConnectionLinkApiModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): VTApiPlaneraResaWebV4ModelsJourneyDetailsConnectionLinkApiModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'transportMode': !exists(json, 'transportMode') ? undefined : VTApiPlaneraResaCoreModelsTransportModeFromJSON(json['transportMode']),
        'transportSubMode': !exists(json, 'transportSubMode') ? undefined : VTApiPlaneraResaCoreModelsTransportSubModeFromJSON(json['transportSubMode']),
        'origin': !exists(json, 'origin') ? undefined : VTApiPlaneraResaWebV4ModelsJourneyDetailsCallApiModelFromJSON(json['origin']),
        'destination': !exists(json, 'destination') ? undefined : VTApiPlaneraResaWebV4ModelsJourneyDetailsCallApiModelFromJSON(json['destination']),
        'notes': !exists(json, 'notes') ? undefined : (json['notes'] === null ? null : (json['notes'] as Array<any>).map(VTApiPlaneraResaCoreModelsNoteFromJSON)),
        'distanceInMeters': !exists(json, 'distanceInMeters') ? undefined : json['distanceInMeters'],
        'plannedDepartureTime': !exists(json, 'plannedDepartureTime') ? undefined : json['plannedDepartureTime'],
        'plannedArrivalTime': !exists(json, 'plannedArrivalTime') ? undefined : json['plannedArrivalTime'],
        'plannedDurationInMinutes': !exists(json, 'plannedDurationInMinutes') ? undefined : json['plannedDurationInMinutes'],
        'estimatedDepartureTime': !exists(json, 'estimatedDepartureTime') ? undefined : json['estimatedDepartureTime'],
        'estimatedArrivalTime': !exists(json, 'estimatedArrivalTime') ? undefined : json['estimatedArrivalTime'],
        'estimatedDurationInMinutes': !exists(json, 'estimatedDurationInMinutes') ? undefined : json['estimatedDurationInMinutes'],
        'estimatedNumberOfSteps': !exists(json, 'estimatedNumberOfSteps') ? undefined : json['estimatedNumberOfSteps'],
        'linkCoordinates': !exists(json, 'linkCoordinates') ? undefined : (json['linkCoordinates'] === null ? null : (json['linkCoordinates'] as Array<any>).map(VTApiPlaneraResaWebV4ModelsCoordinateApiModelFromJSON)),
        'segments': !exists(json, 'segments') ? undefined : (json['segments'] === null ? null : (json['segments'] as Array<any>).map(VTApiPlaneraResaWebV4ModelsJourneyDetailsLinkSegmentApiModelFromJSON)),
        'journeyLegIndex': !exists(json, 'journeyLegIndex') ? undefined : json['journeyLegIndex'],
    };
}

export function VTApiPlaneraResaWebV4ModelsJourneyDetailsConnectionLinkApiModelToJSON(value?: VTApiPlaneraResaWebV4ModelsJourneyDetailsConnectionLinkApiModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'transportMode': VTApiPlaneraResaCoreModelsTransportModeToJSON(value.transportMode),
        'transportSubMode': VTApiPlaneraResaCoreModelsTransportSubModeToJSON(value.transportSubMode),
        'origin': VTApiPlaneraResaWebV4ModelsJourneyDetailsCallApiModelToJSON(value.origin),
        'destination': VTApiPlaneraResaWebV4ModelsJourneyDetailsCallApiModelToJSON(value.destination),
        'notes': value.notes === undefined ? undefined : (value.notes === null ? null : (value.notes as Array<any>).map(VTApiPlaneraResaCoreModelsNoteToJSON)),
        'distanceInMeters': value.distanceInMeters,
        'plannedDepartureTime': value.plannedDepartureTime,
        'plannedArrivalTime': value.plannedArrivalTime,
        'plannedDurationInMinutes': value.plannedDurationInMinutes,
        'estimatedDepartureTime': value.estimatedDepartureTime,
        'estimatedArrivalTime': value.estimatedArrivalTime,
        'estimatedDurationInMinutes': value.estimatedDurationInMinutes,
        'estimatedNumberOfSteps': value.estimatedNumberOfSteps,
        'linkCoordinates': value.linkCoordinates === undefined ? undefined : (value.linkCoordinates === null ? null : (value.linkCoordinates as Array<any>).map(VTApiPlaneraResaWebV4ModelsCoordinateApiModelToJSON)),
        'segments': value.segments === undefined ? undefined : (value.segments === null ? null : (value.segments as Array<any>).map(VTApiPlaneraResaWebV4ModelsJourneyDetailsLinkSegmentApiModelToJSON)),
        'journeyLegIndex': value.journeyLegIndex,
    };
}

