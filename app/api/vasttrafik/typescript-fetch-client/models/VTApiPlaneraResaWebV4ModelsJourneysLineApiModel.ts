/* tslint:disable */
/* eslint-disable */
/**
 * Planera Resa
 * Sök och planera resor med Västtrafik
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { VTApiPlaneraResaCoreModelsTransportMode } from './VTApiPlaneraResaCoreModelsTransportMode';
import {
    VTApiPlaneraResaCoreModelsTransportModeFromJSON,
    VTApiPlaneraResaCoreModelsTransportModeFromJSONTyped,
    VTApiPlaneraResaCoreModelsTransportModeToJSON,
} from './VTApiPlaneraResaCoreModelsTransportMode';
import type { VTApiPlaneraResaCoreModelsTransportSubMode } from './VTApiPlaneraResaCoreModelsTransportSubMode';
import {
    VTApiPlaneraResaCoreModelsTransportSubModeFromJSON,
    VTApiPlaneraResaCoreModelsTransportSubModeFromJSONTyped,
    VTApiPlaneraResaCoreModelsTransportSubModeToJSON,
} from './VTApiPlaneraResaCoreModelsTransportSubMode';

/**
 * Information about a line.
 * @export
 * @interface VTApiPlaneraResaWebV4ModelsJourneysLineApiModel
 */
export interface VTApiPlaneraResaWebV4ModelsJourneysLineApiModel {
    /**
     * The line name.
     * @type {string}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneysLineApiModel
     */
    name?: string | null;
    /**
     * The background color of the line symbol.
     * @type {string}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneysLineApiModel
     */
    backgroundColor?: string | null;
    /**
     * The foreground color of the line symbol.
     * @type {string}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneysLineApiModel
     */
    foregroundColor?: string | null;
    /**
     * The border color of the line symbol.
     * @type {string}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneysLineApiModel
     */
    borderColor?: string | null;
    /**
     * 
     * @type {VTApiPlaneraResaCoreModelsTransportMode}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneysLineApiModel
     */
    transportMode?: VTApiPlaneraResaCoreModelsTransportMode;
    /**
     * 
     * @type {VTApiPlaneraResaCoreModelsTransportSubMode}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneysLineApiModel
     */
    transportSubMode?: VTApiPlaneraResaCoreModelsTransportSubMode;
    /**
     * The short name of the line, usually 5 characters or less.
     * @type {string}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneysLineApiModel
     */
    shortName?: string | null;
    /**
     * The designation of the line.
     * @type {string}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneysLineApiModel
     */
    designation?: string | null;
    /**
     * Flag indicating if the line is wheelchair accessible.
     * @type {boolean}
     * @memberof VTApiPlaneraResaWebV4ModelsJourneysLineApiModel
     */
    isWheelchairAccessible?: boolean;
}

/**
 * Check if a given object implements the VTApiPlaneraResaWebV4ModelsJourneysLineApiModel interface.
 */
export function instanceOfVTApiPlaneraResaWebV4ModelsJourneysLineApiModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function VTApiPlaneraResaWebV4ModelsJourneysLineApiModelFromJSON(json: any): VTApiPlaneraResaWebV4ModelsJourneysLineApiModel {
    return VTApiPlaneraResaWebV4ModelsJourneysLineApiModelFromJSONTyped(json, false);
}

export function VTApiPlaneraResaWebV4ModelsJourneysLineApiModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): VTApiPlaneraResaWebV4ModelsJourneysLineApiModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'backgroundColor': !exists(json, 'backgroundColor') ? undefined : json['backgroundColor'],
        'foregroundColor': !exists(json, 'foregroundColor') ? undefined : json['foregroundColor'],
        'borderColor': !exists(json, 'borderColor') ? undefined : json['borderColor'],
        'transportMode': !exists(json, 'transportMode') ? undefined : VTApiPlaneraResaCoreModelsTransportModeFromJSON(json['transportMode']),
        'transportSubMode': !exists(json, 'transportSubMode') ? undefined : VTApiPlaneraResaCoreModelsTransportSubModeFromJSON(json['transportSubMode']),
        'shortName': !exists(json, 'shortName') ? undefined : json['shortName'],
        'designation': !exists(json, 'designation') ? undefined : json['designation'],
        'isWheelchairAccessible': !exists(json, 'isWheelchairAccessible') ? undefined : json['isWheelchairAccessible'],
    };
}

export function VTApiPlaneraResaWebV4ModelsJourneysLineApiModelToJSON(value?: VTApiPlaneraResaWebV4ModelsJourneysLineApiModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'backgroundColor': value.backgroundColor,
        'foregroundColor': value.foregroundColor,
        'borderColor': value.borderColor,
        'transportMode': VTApiPlaneraResaCoreModelsTransportModeToJSON(value.transportMode),
        'transportSubMode': VTApiPlaneraResaCoreModelsTransportSubModeToJSON(value.transportSubMode),
        'shortName': value.shortName,
        'designation': value.designation,
        'isWheelchairAccessible': value.isWheelchairAccessible,
    };
}

